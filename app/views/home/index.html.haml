- content_for :stuff do
  %a{href: "#upload", rel: "facebox", class: "upload"}

#upload
  .form
    %h2 Upload report
    %p.note
      Currently we support the following vendors:
    %ul.facebox
      %li Amazon (KDP)
      %li Barnes&Noble
      %li Smashwords
    %p.note
      %strong
        File should be provided as it was received from vendor
    = simple_form_for Upload.new do |f|
      = f.input :report
      = f.submit "Upload"
    .warning
      %p
        %strong
          We couldn't identify the vendor of your report!
      %p Please, check the file name. Examples:
      %ul
        %li SmashWords_salesReport-2011-06-08.xls
        %li kdp-report-04-2011.xls for Amazon
        %li BNsales_May2011.xls for Barnes&Noble
- if @books.blank?
  = render :partial => 'blank'
- else
  - vendors = Vendor.all
  .books
    - @books.each do |book|
      .book{ title: %Q{#{book.title}} }
        .info
          .title
            %h1= book.title
        - report = Indie::Report.create(book)
        .months
          %h2 The Last Six Month
          .barchart
            = barchart(210, report.months)
          .month.last_six
            %h2 The Entire Period
            .vendors
              - vendors.each do |vendor|
                .vendor
                  = "#{vendor.name}: #{book.sales.for_vendor(vendor.name).sum(:units)}"
            .total
              total: #{book.sales.sum(:units)}
          - report.months.each do |month|
            .month{ title: "#{month.title}", :class => "#{month.name}", style: "display: none;" }
              %h2= month.name
              .vendors
                - month.vendors.each do |vendor|
                  .vendor
                    #{vendor.name}: #{vendor.units} 
              .total
                total: #{month.units}
        .totals
          %h2 The Entire Period
          .vendors
            - vendors.each do |vendor|
              .vendor
                = "#{vendor.name}: #{book.sales.for_vendor(vendor.name).sum(:units)}"
          .total
            total: #{book.sales.sum(:units)}
